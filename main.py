import streamlit as st

# --- MBTI 유형별 추천 직업 데이터 ---
# 이 부분은 실제 서비스에 맞게 데이터를 더욱 풍부하게 채워주세요!
# 각 유형별로 어울리는 직업들을 리스트 형태로 구성했습니다.
mbti_career_data = {
    "ISTJ": ["회계사", "관리자", "정보 시스템 관리자", "법률가", "경찰관"],
    "ISFJ": ["간호사", "교사 (유아/초등)", "사회복지사", "사서", "행정 보조원"],
    "INFJ": ["상담사", "심리학자", "작가", "예술가", "교사 (고등/대학교)", "성직자"],
    "INTJ": ["과학자", "엔지니어", "대학교수", "컴퓨터 프로그래머", "전략 컨설턴트"],
    "ISTP": ["기술자", "경찰관", "소방관", "운동선수", "파일럿", "정비사"],
    "ISFP": ["예술가", "음악가", "디자이너", "수의사", "조경사", "요리사"],
    "INFP": ["작가", "예술가", "심리학자", "상담사", "도서관 사서", "번역가"],
    "INTP": ["과학자", "수학자", "컴퓨터 과학자", "철학자", "연구원", "프로그래머"],
    "ESTP": ["영업 사원", "사업가", "경찰관", "응급 구조원", "트레이너", "스포츠 코치"],
    "ESFP": ["연예인", "이벤트 기획자", "교사 (초등)", "트레이너", "영업 사원", "여행 가이드"],
    "ENFP": ["홍보 전문가", "광고 기획자", "심리학자", "작가", "예술가", "마케터", "컨설턴트"],
    "ENTP": ["사업가", "경영 컨설턴트", "변호사", "과학자", "발명가", "벤처 투자자"],
    "ESTJ": ["경영자", "감독관", "군인", "재정 관리자", "법률가", "은행원"],
    "ESFJ": ["교사 (초등/중등)", "간호사", "사회복지사", "행정직", "상담사", "승무원"],
    "ENFJ": ["교사 (중등/고등)", "상담사", "성직자", "HR 전문가", "정치인", "강사"],
    "ENTJ": ["사업가", "경영 컨설턴트", "변호사", "대학교수", "리더", "고위 공무원"],
}

def get_career_recommendations(mbti_type):
    """
    선택된 MBTI 유형에 따른 직업 추천을 반환합니다.
    """
    return mbti_career_data.get(mbti_type, ["해당 MBTI 유형에 대한 정보가 아직 없습니다. 😅"])

# --- Streamlit 앱 메인 함수 ---
def main():
    st.set_page_config(page_title="MBTI 기반 직업 추천 (진로 교육용)", layout="centered")

    st.title("💡 MBTI 기반 직업 추천 웹 (진로 교육용)")
    st.write("안녕하세요, yuns0726님! 이 웹 앱은 여러분의 MBTI 유형에 기반하여 어울리는 직업들을 추천해 드립니다. 😉")
    st.write("자기 이해와 진로 탐색에 작은 도움이 되기를 바랍니다.")
    st.markdown("---")

    # MBTI 유형 선택 드롭다운
    # 사용자에게 선택지를 제공하기 위해 모든 MBTI 유형을 포함합니다.
    mbti_types = sorted(list(mbti_career_data.keys())) # 가나다순으로 정렬
    
    selected_mbti = st.selectbox(
        "✨ 당신의 MBTI 유형을 선택해 주세요:",
        ["MBTI 유형을 선택하세요"] + mbti_types, # 기본 메시지를 첫 번째 항목으로 추가
        help="MBTI는 마이어스-브릭스 유형 지표로, 성격 유형을 분류하는 도구입니다."
    )

    # 선택된 MBTI 유형이 있을 때만 추천 버튼 표시
    if selected_mbti != "MBTI 유형을 선택하세요":
        if st.button("나에게 맞는 직업 추천받기! 🚀"):
            st.markdown("---")
            st.subheader(f"✅ {selected_mbti} 유형을 위한 추천 직업:")
            recommendations = get_career_recommendations(selected_mbti)
            
            if recommendations:
                st.info(f"**{selected_mbti}** 유형은 다음과 같은 특징을 가질 수 있으며, 이에 따라 해당 직업들이 잘 어울릴 수 있습니다. (설명 추가 예정)") # 나중에 MBTI 유형별 상세 설명 추가 공간
                st.write("---")
                for i, career in enumerate(recommendations):
                    st.success(f"**{i+1}.** {career}") # 번호를 붙여 보기 좋게 표시
            else:
                st.warning("죄송합니다. 선택하신 MBTI 유형에 대한 추천 직업 데이터를 찾을 수 없습니다. ㅠㅠ")
    else:
        st.info("☝️ 위에 있는 드롭다운 메뉴에서 여러분의 MBTI 유형을 선택해주세요!")

    st.markdown("---")
    st.caption("🚨 **면책 조항:** 본 직업 추천은 일반적인 MBTI 유형별 경향을 바탕으로 하며, 실제 직업 선택은 개인의 재능, 흥미, 가치관, 경험 등 다양한 요소를 종합적으로 고려하여 신중하게 결정해야 합니다. 재미와 교육 목적으로만 활용해주세요!")
    st.caption("개발자: yuns0726님 (가나다 드림 🌠)")


# --- 앱 실행 부분 ---
if __name__ == "__main__":
    main()
